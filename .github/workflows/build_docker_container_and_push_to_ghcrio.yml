name: deploy_to_ghcrio

on:
  push:
    branches:
      - main
      - v2

jobs:
  tag_and_dockerise:
    # When merging to one of the branches above and the commit message matches
    if: "startsWith(github.event.head_commit.message, 'Bump version:')"
    name: Tag and dockerise
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: Tag based on version
        uses: actions/github-script@v6
        env:
          VERSION: ${{ steps.package-version.outputs.current-version }}
        with:
          script: |
            const the_tag = 'refs/tags/v' + process.env.VERSION
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: the_tag,
              sha: context.sha
            })
      # checkout tag from above
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: v${{ steps.package-version.outputs.current-version }}
      # Use qemu to perform multiplatform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # Use docker buildx to build multi-platform containers
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          use: true
          install: true
          config-inline: |
            [worker.oci]
              max-parallelism = 2
      # Log in to GitHub Container registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.package-version.outputs.current-version }}
